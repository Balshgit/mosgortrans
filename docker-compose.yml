version: '3.9'

volumes:
  transport_bot_caddy-config:
    name: transport_bot_caddy-config
  transport_bot_caddy-data:
    name: transport_bot_caddy-data

networks:
  transport_bot_network:
    name:
      "transport_bot_network"
    ipam:
      config:
        - subnet: 200.20.0.0/24

services:
  selenoid:
    container_name: "transport_bot_selenoid"
    hostname: "selenoid_host"
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.selenoid
    restart: unless-stopped
    networks:
      transport_bot_network:
        ipv4_address: 200.20.0.10
    volumes:
      - ./deploy/browsers.json:/etc/selenoid/browsers.json:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: ["-conf", "/etc/selenoid/browsers.json", "-limit", "10",
              "-container-network", "transport_bot_network", "-timeout", "30s"]
    expose:
      - "4444"

  bot:
    container_name: "transport_bot"
    hostname: "transport_bot"
    image: "transport_bot:latest"
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.bot
      args:
        USER: web
    restart: unless-stopped
    depends_on:
      - selenoid
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      transport_bot_network:
        ipv4_address: 200.20.0.11
    expose:
      - "8084"
    command: bash start-bot.sh


  caddy:
    image: "caddy:2.6.2"
    container_name: transport_bot_caddy
    hostname: transport_bot_caddy
    restart: unless-stopped
    env_file:
      - app/config/.env
    ports:
      - '8084:8084'
    depends_on:
      - bot
      - selenoid
    volumes:
      - ./deploy/Caddyfile:/etc/caddy/Caddyfile:ro
      - transport_bot_caddy-data:/data
      - transport_bot_caddy-config:/config
    networks:
      transport_bot_network:
        ipv4_address: 200.20.0.12
